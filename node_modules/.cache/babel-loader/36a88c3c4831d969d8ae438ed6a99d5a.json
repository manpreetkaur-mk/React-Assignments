{"ast":null,"code":"var _jsxFileName = \"/Users/manpreetkaur/Documents/factor/React/demo2/src/Displaydata.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Displaydata = () => {\n  _s();\n\n  const [userData, setUserData] = useState([]);\n  const [postData, setPostData] = useState([]);\n  const [commentData, setCommentData] = useState([]);\n\n  const fetchUserData = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => {\n      return response.json();\n    }).then(data => {\n      setUserData(data);\n    });\n  };\n\n  const fetchPostData = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => {\n      return response.json();\n    }).then(data => {\n      setPostData(data);\n    });\n  };\n\n  const fetchCommentData = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/comments\").then(response => {\n      return response.json();\n    }).then(data => {\n      setCommentData(data);\n    });\n  };\n\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n  useEffect(() => {\n    fetchPostData();\n  }, []);\n  useEffect(() => {\n    fetchCommentData();\n  }, []);\n\n  const MyUser = props => {\n    console.log(\"userrrrr\", props);\n    let user = { ...user1\n    };\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: () => {\n        '';\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"User Id : \", user.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Name : \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Username : \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Street : \", user.address.street]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"City : \", user.address.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Zipcode : \", user.address.zipcode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Lat : \", user.address.geo.lat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Lng : \", user.address.geo.lng]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Phone : \", user.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Website : \", user.website]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Company name :\", user.company.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Company CatchPhrase : \", user.company.catchPhrase]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Bs : \", user.company.bs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: userData.map((user, index) => {\n      return /*#__PURE__*/_jsxDEV(MyUser, {\n        user1: user,\n        onClick: () => alert(user.id)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Displaydata, \"Bhm2RLjpZ7SZVElWCbdOrWRjZD4=\");\n\n_c = Displaydata;\nexport default Displaydata; // <div>\n//       {postData.map(post => (\n//         <ul key ={post.id}>\n//             <b>User Id : {post.userId}</b>\n//             <li>Id : {post.id}</li>\n//             <li>Title : {post.title}</li>\n//             <li>Body : {post.body}</li>\n//         </ul>      ))}\n// </div>\n// <div>\n// {commentData.map(comment => (\n// <ul key ={comment.id}>\n//     <b>Post Id : {comment.postId}</b>\n//     <li>Id : {comment.id}</li>\n//     <li>Name : {comment.name}</li>\n//     <li>Email : {comment.email}</li>\n//     <li>Body : {comment.body}</li>\n// </ul>      ))}\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"Displaydata\");","map":{"version":3,"names":["React","useEffect","useState","Displaydata","userData","setUserData","postData","setPostData","commentData","setCommentData","fetchUserData","fetch","then","response","json","data","fetchPostData","fetchCommentData","MyUser","props","console","log","user","user1","id","name","username","address","street","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","map","index","alert"],"sources":["/Users/manpreetkaur/Documents/factor/React/demo2/src/Displaydata.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\n\nconst Displaydata = () => {\n  const [userData, setUserData] = useState([])\n  const [postData, setPostData] = useState([])\n  const [commentData, setCommentData] = useState([])\n\n\n  const fetchUserData = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => {\n        return response.json()\n      })\n      .then(data => {\n        setUserData(data)\n      })\n  }\n\n  const fetchPostData = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then(response => {\n        return response.json()\n      })\n      .then(data => {\n        setPostData(data)\n      })\n  }\n\n  const fetchCommentData = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/comments\")\n      .then(response => {\n        return response.json()\n      })\n      .then(data => {\n        setCommentData(data)\n      })\n  }\n\n  useEffect(() => {\n    fetchUserData()\n  }, [])\n\n  useEffect(() => {\n    fetchPostData()\n  }, [])\n\n  useEffect(() => {\n    fetchCommentData()\n  }, [])\n\n  const MyUser = (props) => {\n    console.log(\"userrrrr\", props);\n    let user = {...user1};\n    return (\n        <ul key={user.id} onClick={()=>{''}}>\n            <b>User Id : {user.id}</b>\n            <li>Name : {user.name}</li>\n            <li>Username : {user.username}</li>\n            <li>Street : {user.address.street}</li>\n            <li>City : {user.address.city}</li>\n            <li>Zipcode : {user.address.zipcode}</li>\n            <li>Lat : {user.address.geo.lat}</li>\n            <li>Lng : {user.address.geo.lng}</li>\n            <li>Phone : {user.phone}</li>\n            <li>Website : {user.website}</li>\n            <li>Company name :{user.company.name}</li>\n            <li>Company CatchPhrase : {user.company.catchPhrase}</li>\n            <li>Bs : {user.company.bs}</li>\n        </ul>\n    )\n  }\n  return (\n   <div>\n      {userData.map((user, index) => {\n        return <MyUser key={index} user1={user} onClick={()=>alert(user.id)}/>\n      })}\n    </div>\n  )\n}\n\nexport default Displaydata;\n\n// <div>\n      \n//       {postData.map(post => (\n//         <ul key ={post.id}>\n//             <b>User Id : {post.userId}</b>\n//             <li>Id : {post.id}</li>\n//             <li>Title : {post.title}</li>\n//             <li>Body : {post.body}</li>\n\n//         </ul>      ))}\n   \n// </div>\n\n// <div>\n// {commentData.map(comment => (\n// <ul key ={comment.id}>\n//     <b>Post Id : {comment.postId}</b>\n//     <li>Id : {comment.id}</li>\n//     <li>Name : {comment.name}</li>\n//     <li>Email : {comment.email}</li>\n//     <li>Body : {comment.body}</li>\n\n\n// </ul>      ))}\n   \n// </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}