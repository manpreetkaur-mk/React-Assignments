{"ast":null,"code":"var _jsxFileName = \"/Users/manpreetkaur/Documents/factor/React/demo2/src/Displaydata.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Displaydata = () => {\n  _s();\n\n  const [userData, setUserData] = useState([]);\n  const [userID, setUserID] = useState(0);\n  const [postId, setPostId] = useState(0);\n  const [postData, setPostData] = useState([]);\n  const [commentData, setCommentData] = useState([]);\n\n  const fetchUserData = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => {\n      return response.json();\n    }).then(data => {\n      setUserData(data);\n    });\n  };\n\n  const fetchPostData = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => {\n      return response.json();\n    }).then(data => {\n      setPostData(data);\n    });\n  };\n\n  const fetchCommentData = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/comments\").then(response => {\n      return response.json();\n    }).then(data => {\n      setCommentData(data);\n    });\n  };\n\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n  useEffect(() => {\n    fetchPostData();\n  }, []);\n  useEffect(() => {\n    fetchCommentData();\n  }, []);\n\n  const MyUser = props => {\n    let user = { ...props.user1\n    };\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: () => {\n        props.onClick();\n      },\n      style: {\n        backgroundColor: 'lightgrey',\n        borderRadius: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"User Id : \", user.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Name : \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Username : \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Street : \", user.address.street]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"City : \", user.address.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Zipcode : \", user.address.zipcode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Lat : \", user.address.geo.lat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Lng : \", user.address.geo.lng]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Phone : \", user.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Website : \", user.website]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Company name :\", user.company.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Company CatchPhrase : \", user.company.catchPhrase]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Bs : \", user.company.bs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  };\n\n  const MyPost = props => {\n    let post = { ...props.post1\n    };\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: () => {\n        props.onClick();\n      },\n      style: {\n        backgroundColor: 'yellow',\n        borderRadius: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"User Id : \", post.userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Id : \", post.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Title : \", post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Body : \", post.body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this);\n  };\n\n  const Comments = props => {\n    let comment = { ...props.comment1\n    };\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        backgroundColor: \"green\",\n        borderRadius: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"User Id : \", userID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Post Id : \", comment.postId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Body : \", comment.body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: userID && !postId ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setUserID(0),\n        children: \" BACK To Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), postData.map((post, index) => {\n        if (userID === post.userId) return /*#__PURE__*/_jsxDEV(MyPost, {\n          post1: post,\n          onClick: () => {\n            setPostId(post.id);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this);else return null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this) : userID && postId ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPostId(0),\n        children: \" BACK To Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), commentData.map((comment, index) => {\n        if (userID && postId === comment.postId) return /*#__PURE__*/_jsxDEV(Comments, {\n          comment1: comment\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 20\n        }, this);else return null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this) : userData.map((user, index) => {\n      return /*#__PURE__*/_jsxDEV(MyUser, {\n        user1: user,\n        onClick: () => setUserID(user.id)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Displaydata, \"ZTm2kYhau26AhO4WfHvid3E1GZk=\");\n\n_c = Displaydata;\nexport default Displaydata; // <div>\n//       {postData.map(post => (\n// <ul key ={post.id}>\n//     <b>User Id : {post.userId}</b>\n//     <li>Id : {post.id}</li>\n//     <li>Title : {post.title}</li>\n//     <li>Body : {post.body}</li>\n// </ul>    \n// </div>\n// <div>\n// {commentData.map(comment => (\n// <ul key ={comment.id}>\n//     <b>Post Id : {comment.postId}</b>\n//     <li>Id : {comment.id}</li>\n//     <li>Name : {comment.name}</li>\n//     <li>Email : {comment.email}</li>\n//     <li>Body : {comment.body}</li>\n// </ul>      ))}\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"Displaydata\");","map":{"version":3,"names":["React","useEffect","useState","Displaydata","userData","setUserData","userID","setUserID","postId","setPostId","postData","setPostData","commentData","setCommentData","fetchUserData","fetch","then","response","json","data","fetchPostData","fetchCommentData","MyUser","props","user","user1","onClick","backgroundColor","borderRadius","id","name","username","address","street","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","MyPost","post","post1","userId","title","body","Comments","comment","comment1","map","index"],"sources":["/Users/manpreetkaur/Documents/factor/React/demo2/src/Displaydata.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\n\nconst Displaydata = () => {\n  const [userData, setUserData] = useState([]);\n  const [userID, setUserID] = useState(0);\n  const [postId,setPostId] = useState(0);\n  \n  const [postData, setPostData] = useState([])\n  const [commentData, setCommentData] = useState([])\n\n\n  const fetchUserData = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => {\n        return response.json()\n      })\n      .then(data => {\n        setUserData(data)\n      })\n  }\n\n  const fetchPostData = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then(response => {\n        return response.json()\n      })\n      .then(data => {\n        setPostData(data)\n      })\n  }\n\n  const fetchCommentData = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/comments\")\n      .then(response => {\n        return response.json()\n      })\n      .then(data => {\n        setCommentData(data)\n      })\n  }\n\n  useEffect(() => {\n    fetchUserData()\n  }, [])\n\n  useEffect(() => {\n    fetchPostData()\n  }, [])\n\n  useEffect(() => {\n    fetchCommentData()\n  }, [])\n\n \n\n  const MyUser = (props) => {\n    let user = {...props.user1};\n    return (\n        <ul key={user.id} onClick={()=>{props.onClick()}} style={{backgroundColor:'lightgrey', borderRadius:8}}>\n            <li><b>User Id : {user.id}</b></li>\n            <li>Name : {user.name}</li>\n            <li>Username : {user.username}</li>\n            <li>Street : {user.address.street}</li>\n            <li>City : {user.address.city}</li>\n            <li>Zipcode : {user.address.zipcode}</li>\n            <li>Lat : {user.address.geo.lat}</li>\n            <li>Lng : {user.address.geo.lng}</li>\n            <li>Phone : {user.phone}</li>\n            <li>Website : {user.website}</li>\n            <li>Company name :{user.company.name}</li>\n            <li>Company CatchPhrase : {user.company.catchPhrase}</li>\n            <li>Bs : {user.company.bs}</li>\n        </ul>\n    )\n  }\n\n  const MyPost = (props) => {\n    let post = {...props.post1};\n    return (\n        <ul key={post.id} onClick={()=>{props.onClick()}} style={{backgroundColor:'yellow', borderRadius:8}}>\n            <li><b>User Id : {post.userId}</b></li>\n            <li>Id : {post.id}</li>\n            <li>Title : {post.title}</li>\n            <li>Body : {post.body}</li>\n        </ul>\n    )\n  }\n\n  const Comments = (props) => {\n    let comment = { ...props.comment1 };\n    return (\n      <ul style={{ backgroundColor: \"green\", borderRadius: 8 }}>\n        <li>\n          <b>User Id : {userID}</b>\n        </li>\n        <li>\n          <b>Post Id : {comment.postId}</b>\n        </li>\n        <li>Body : {comment.body}</li>\n      </ul>\n    );\n  };\n\n  return (\n    <div>\n    {userID && !postId ? (\n      <div>\n        <button onClick={() => setUserID(0)}> BACK To Users</button>\n        {postData.map((post, index) => {\n          if (userID === post.userId)\n            return (\n              <MyPost\n                key={index}\n                post1={post}\n                onClick={() => {\n                  setPostId(post.id);\n                }}\n              />\n            );\n          else return null;\n        })}\n      </div>\n    ) : userID && postId ? (\n      <div>\n        <button onClick={() => setPostId(0)}> BACK To Posts</button>\n        {commentData.map((comment, index) => {\n          if (userID && postId === comment.postId)\n            return <Comments key={index} comment1={comment} />;\n          else return null;\n        })}\n      </div>\n    ) : (\n      userData.map((user, index) => {\n        return (\n          <MyUser\n            key={index}\n            user1={user}\n            onClick={() => setUserID(user.id)}\n          />\n        );\n      })\n    )}\n  </div>\n  )\n}\n\nexport default Displaydata;\n\n// <div>\n      \n//       {postData.map(post => (\n        // <ul key ={post.id}>\n        //     <b>User Id : {post.userId}</b>\n        //     <li>Id : {post.id}</li>\n        //     <li>Title : {post.title}</li>\n        //     <li>Body : {post.body}</li>\n\n        // </ul>    \n   \n// </div>\n\n// <div>\n// {commentData.map(comment => (\n// <ul key ={comment.id}>\n//     <b>Post Id : {comment.postId}</b>\n//     <li>Id : {comment.id}</li>\n//     <li>Name : {comment.name}</li>\n//     <li>Email : {comment.email}</li>\n//     <li>Body : {comment.body}</li>\n\n\n// </ul>      ))}\n   \n// </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}