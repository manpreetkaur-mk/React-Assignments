{"ast":null,"code":"var _jsxFileName = \"/Users/manpreetkaur/Documents/factor/React/demo2/src/Practise/Incre.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Incre = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n\n  const countManagement = sign => {\n    setCount(count + (sign ? 1 : -1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => countManagement(0),\n        children: \"decrementCount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => countManagement(1),\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}; // const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(<Incre />, rootElement);\n\n\n_s(Incre, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = Incre;\n\nvar _c;\n\n$RefreshReg$(_c, \"Incre\");","map":{"version":3,"names":["React","useState","Incre","count","setCount","countManagement","sign"],"sources":["/Users/manpreetkaur/Documents/factor/React/demo2/src/Practise/Incre.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Incre = ()=> {\n\n  const [count, setCount] = useState(0);\n\n  const countManagement = (sign) => {\n    setCount(count + (sign?1:-1));\n  };\n\n  return (\n    <div >\n      <div>\n        <button onClick={()=>countManagement(0)}>decrementCount</button>\n      </div>\n      <div>\n        <button onClick={()=>countManagement(1)}>Increment</button>\n      </div>\n      <div>\n        {count}\n      </div>\n    </div>\n  );\n}\n\n// const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(<Incre />, rootElement);"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,KAAK,GAAG,MAAK;EAAA;;EAEjB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;;EAEA,MAAMI,eAAe,GAAIC,IAAD,IAAU;IAChCF,QAAQ,CAACD,KAAK,IAAIG,IAAI,GAAC,CAAD,GAAG,CAAC,CAAZ,CAAN,CAAR;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE;MAAA,uBACE;QAAQ,OAAO,EAAE,MAAID,eAAe,CAAC,CAAD,CAApC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,uBACE;QAAQ,OAAO,EAAE,MAAIA,eAAe,CAAC,CAAD,CAApC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF,eAOE;MAAA,UACGF;IADH;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CArBD,C,CAuBA;AACA;;;GAxBMD,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}