{"ast":null,"code":"var _jsxFileName = \"/Users/manpreetkaur/Documents/DXFactor/React/demo2/src/Hum.js\",\n    _s = $RefreshSig$();\n\n/*import { useState } from \"react\";\nimport React from \"react\";\n\nvar tasks1 = [\n    {\n        id: 1,\n        title: \"Attend meeting\",\n        status: 0,\n    },\n    {\n        id: 2,\n        title: \"Do laundry\",\n        status: 1,\n    },\n    {\n        id: 3,\n        title: \"Bring medicine\",\n        status: 1,\n    },\n    {\n        id: 4,\n        title: \"Do Dancing\",\n        status: 0,\n    }\n];\n\nfunction Hum() {\n    const [task, setTask] = useState({});\n    const [tasks, setTasks] = useState(tasks1);\n\n    const changeStatus = (index) => {\n        let newTasks = [...tasks];\n        newTasks[index].status = !newTasks[index].status;\n        setTasks(newTasks)\n    }\n\n    const save =()=> {\n        setTasks([...tasks, task]);\n        setTask({});\n    }\n\n    return (\n        <div>\n            <h3>Status:</h3>\n            <input onChange={(e)=>{setTask({id:0, title:e.target.value, status:0})}} value={task.title} />\n            <button onClick={()=>save()}>Submit</button>\n            <ul>\n                {tasks.map((item, index) => {\n                    return (\n                        <li style={{ textDecoration: (item.status ? \"line-through\" : \"\") }} onClick={() => { setTask(item)}}>\n                            {index + 1} - {item.title} <button onClick={() => { changeStatus(index) }}> Completed</button>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n}\nexport default Hum;*/\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hum() {\n  _s();\n\n  const [toDoList, setToDoList] = useState(data);\n\n  const handleToggle = id => {\n    let mapped = toDoList.map(task => {\n      return task.id === Number(id) ? { ...task,\n        complete: !task.complete\n      } : { ...task\n      };\n    });\n    setToDoList(mapped);\n  };\n\n  const handleFilter = () => {\n    let filtered = toDoList.filter(task => {\n      return !task.complete;\n    });\n    setToDoList(filtered);\n  };\n\n  const addTask = userInput => {\n    let copy = [...toDoList];\n    copy = [...copy, {\n      id: toDoList.length + 1,\n      task: userInput,\n      complete: false\n    }];\n    setToDoList(copy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      toDoList: toDoList,\n      handleToggle: handleToggle,\n      handleFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Hum, \"CrnkRfLuWqje/f4mH+mQmMdXvoM=\");\n\n_c = Hum;\nexport default Hum;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hum\");","map":{"version":3,"names":["React","useState","Hum","toDoList","setToDoList","data","handleToggle","id","mapped","map","task","Number","complete","handleFilter","filtered","filter","addTask","userInput","copy","length"],"sources":["/Users/manpreetkaur/Documents/DXFactor/React/demo2/src/Hum.js"],"sourcesContent":["/*import { useState } from \"react\";\nimport React from \"react\";\n\nvar tasks1 = [\n    {\n        id: 1,\n        title: \"Attend meeting\",\n        status: 0,\n    },\n    {\n        id: 2,\n        title: \"Do laundry\",\n        status: 1,\n    },\n    {\n        id: 3,\n        title: \"Bring medicine\",\n        status: 1,\n    },\n    {\n        id: 4,\n        title: \"Do Dancing\",\n        status: 0,\n    }\n];\n\nfunction Hum() {\n    const [task, setTask] = useState({});\n    const [tasks, setTasks] = useState(tasks1);\n\n    const changeStatus = (index) => {\n        let newTasks = [...tasks];\n        newTasks[index].status = !newTasks[index].status;\n        setTasks(newTasks)\n    }\n\n    const save =()=> {\n        setTasks([...tasks, task]);\n        setTask({});\n    }\n\n    return (\n        <div>\n            <h3>Status:</h3>\n            <input onChange={(e)=>{setTask({id:0, title:e.target.value, status:0})}} value={task.title} />\n            <button onClick={()=>save()}>Submit</button>\n            <ul>\n                {tasks.map((item, index) => {\n                    return (\n                        <li style={{ textDecoration: (item.status ? \"line-through\" : \"\") }} onClick={() => { setTask(item)}}>\n                            {index + 1} - {item.title} <button onClick={() => { changeStatus(index) }}> Completed</button>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n}\nexport default Hum;*/\nimport React, { useState } from 'react';\nfunction Hum() {\n  \n  const [ toDoList, setToDoList ] = useState(data);\n\n  const handleToggle = (id) => {\n    let mapped = toDoList.map(task => {\n      return task.id === Number(id) ? { ...task, complete: !task.complete } : { ...task};\n    });\n    setToDoList(mapped);\n  }\n\n  const handleFilter = () => {\n    let filtered = toDoList.filter(task => {\n      return !task.complete;\n    });\n    setToDoList(filtered);\n  }\n\n  const addTask = (userInput ) => {\n    let copy = [...toDoList];\n    copy = [...copy, { id: toDoList.length + 1, task: userInput, complete: false }];\n    setToDoList(copy);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <ToDoList toDoList={toDoList} handleToggle={handleToggle} handleFilter={handleFilter}/>\n      <ToDoForm addTask={addTask}/>\n    </div>\n  );\n}\n\nexport default Hum;"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AACA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BH,QAAQ,CAACI,IAAD,CAA1C;;EAEA,MAAMC,YAAY,GAAIC,EAAD,IAAQ;IAC3B,IAAIC,MAAM,GAAGL,QAAQ,CAACM,GAAT,CAAaC,IAAI,IAAI;MAChC,OAAOA,IAAI,CAACH,EAAL,KAAYI,MAAM,CAACJ,EAAD,CAAlB,GAAyB,EAAE,GAAGG,IAAL;QAAWE,QAAQ,EAAE,CAACF,IAAI,CAACE;MAA3B,CAAzB,GAAiE,EAAE,GAAGF;MAAL,CAAxE;IACD,CAFY,CAAb;IAGAN,WAAW,CAACI,MAAD,CAAX;EACD,CALD;;EAOA,MAAMK,YAAY,GAAG,MAAM;IACzB,IAAIC,QAAQ,GAAGX,QAAQ,CAACY,MAAT,CAAgBL,IAAI,IAAI;MACrC,OAAO,CAACA,IAAI,CAACE,QAAb;IACD,CAFc,CAAf;IAGAR,WAAW,CAACU,QAAD,CAAX;EACD,CALD;;EAOA,MAAME,OAAO,GAAIC,SAAD,IAAgB;IAC9B,IAAIC,IAAI,GAAG,CAAC,GAAGf,QAAJ,CAAX;IACAe,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAU;MAAEX,EAAE,EAAEJ,QAAQ,CAACgB,MAAT,GAAkB,CAAxB;MAA2BT,IAAI,EAAEO,SAAjC;MAA4CL,QAAQ,EAAE;IAAtD,CAAV,CAAP;IACAR,WAAW,CAACc,IAAD,CAAX;EACD,CAJD;;EAMA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAU,QAAQ,EAAEf,QAApB;MAA8B,YAAY,EAAEG,YAA5C;MAA0D,YAAY,EAAEO;IAAxE;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,QAAD;MAAU,OAAO,EAAEG;IAAnB;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GA/BQd,G;;KAAAA,G;AAiCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}